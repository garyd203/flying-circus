"""Raw representations of every data type in the AWS {{ service.name }} service.
{%- if service.documentation.url %}

See Also:
    `AWS developer guide for {{ service.name }}
    <{{ service.documentation.url }}>`_
{%- endif %}

This file is automatically generated, and should not be directly edited.
"""
{%- if service.typing_imports %}
{% for import_name in service.typing_imports | sort %}
from typing import {{ import_name }}
{%- endfor %}
{%- endif %}

from attr import attrib
from attr import attrs

from ..core import ATTRSCONFIG
from ..core import Resource
from ..core import ResourceProperties
from ..core import create_object_converter

__all__ = [
{%- for resource_name in service.resources.keys() | sort %}
    "{{ resource_name }}",
    "{{ resource_name }}Properties",
{%- endfor %}
]

{%- for resource_name, resource in service.resources.items() | sort %}


@attrs(**ATTRSCONFIG)
class {{ resource_name }}Properties(ResourceProperties):
{%- if resource.Properties %}
{%- for property in resource.Properties.keys() | sort %}
    {{ property }} = attrib(default=None)
{%- endfor %}
{%- else %}
    # A {{ resource_name }} doesn't actually have any Properties.
    pass
{%- endif %}


@attrs(**ATTRSCONFIG)
class {{ resource_name }}(Resource):
    """A {{ resource.friendly_name }} for {{ service.name }}.

    See Also:
        `AWS Cloud Formation documentation for {{ resource_name }}
        <{{ resource.Documentation }}>`_
    """

    RESOURCE_TYPE = "{{ resource.type.fullname }}"

    Properties: {{ resource_name }}Properties = attrib(
        factory={{ resource_name }}Properties,
        converter=create_object_converter({{ resource_name }}Properties),
    )

{%- if resource.has_create_policy %}

    # NB: CreationPolicy may be set for {{ resource_name }}
    # (unlike most Resource types)
    CreationPolicy: Dict[str, Any] = attrib(factory=dict)
{%- endif %}

{%- if resource.has_update_policy %}

    # NB: UpdatePolicy may be set for {{ resource_name }}
    # (unlike most Resource types)
    UpdatePolicy: Dict[str, Any] = attrib(factory=dict)
{%- endif %}
{%- endfor %}

